#######################################################################
# Setup
#######################################################################

message( STATUS "Adding tools unit testing" )
enable_testing()

function( add_cpp_test name source )

  set( test_name "tools.${name}.test" )
  add_executable( ${test_name} ${source} )
  add_test( NAME ${test_name} COMMAND ${test_name} )
  target_link_libraries( ${test_name} PRIVATE tools )
  target_link_libraries( ${test_name} PRIVATE Catch2::Catch2WithMain )

  file( GLOB resources "resources/*" )
  foreach( resource ${resources} )
    file( COPY "${resource}" DESTINATION "${CMAKE_CURRENT_BINARY_DIR}" )
  endforeach()

endfunction()

#######################################################################
# Unit testing directories
#######################################################################

#Removing tests for logging as th feeature is not used
#add_cpp_test( Log.Log Log/Log.test.cpp )

add_cpp_test( disco.BaseField disco/BaseField.test.cpp )
add_cpp_test( disco.BaseFixedWidthField disco/BaseFixedWidthField.test.cpp )
add_cpp_test( disco.Character disco/Character.test.cpp )
add_cpp_test( disco.Column disco/Column.test.cpp )
add_cpp_test( disco.ENDF disco/ENDF.test.cpp )
add_cpp_test( disco.FixedPoint disco/FixedPoint.test.cpp )
add_cpp_test( disco.FreeFormatCharacter disco/FreeFormatCharacter.test.cpp )
add_cpp_test( disco.FreeFormatInteger disco/FreeFormatInteger.test.cpp )
add_cpp_test( disco.FreeFormatReal disco/FreeFormatReal.test.cpp )
add_cpp_test( disco.Integer disco/Integer.test.cpp )
add_cpp_test( disco.Real disco/Real.test.cpp )
add_cpp_test( disco.Record disco/Record.test.cpp )
add_cpp_test( disco.Scientific disco/Scientific.test.cpp )
add_cpp_test( disco.functions disco/functions.test.cpp )
add_cpp_test( std20.algorithm.adjacent_find std20/algorithm/adjacent_find.test.cpp )
add_cpp_test( std20.algorithm.count std20/algorithm/count.test.cpp )
add_cpp_test( std20.algorithm.count_if std20/algorithm/count_if.test.cpp )
add_cpp_test( std20.algorithm.equal std20/algorithm/equal.test.cpp )
add_cpp_test( std20.algorithm.find std20/algorithm/find.test.cpp )
add_cpp_test( std20.algorithm.min std20/algorithm/min.test.cpp )
add_cpp_test( std20.algorithm.mismatch std20/algorithm/mismatch.test.cpp )
add_cpp_test( std20.concepts.assignable_from std20/concepts/assignable_from.test.cpp )
add_cpp_test( std20.concepts.common_reference_with std20/concepts/common_reference_with.test.cpp )
add_cpp_test( std20.concepts.common_with std20/concepts/common_with.test.cpp )
add_cpp_test( std20.concepts.constructible_from std20/concepts/constructible_from.test.cpp )
add_cpp_test( std20.concepts.convertible_to std20/concepts/convertible_to.test.cpp )
add_cpp_test( std20.concepts.copy_constructible std20/concepts/copy_constructible.test.cpp )
add_cpp_test( std20.concepts.copyable std20/concepts/copyable.test.cpp )
add_cpp_test( std20.concepts.default_initializable std20/concepts/default_initializable.test.cpp )
add_cpp_test( std20.concepts.derived_from std20/concepts/derived_from.test.cpp )
add_cpp_test( std20.concepts.destructible std20/concepts/destructible.test.cpp )
add_cpp_test( std20.concepts.equality_comparable std20/concepts/equality_comparable.test.cpp )
add_cpp_test( std20.concepts.floating_point std20/concepts/floating_point.test.cpp )
add_cpp_test( std20.concepts.integral std20/concepts/integral.test.cpp )
add_cpp_test( std20.concepts.invocable std20/concepts/invocable.test.cpp )
add_cpp_test( std20.concepts.movable std20/concepts/movable.test.cpp )
add_cpp_test( std20.concepts.move_constructible std20/concepts/move_constructible.test.cpp )
add_cpp_test( std20.concepts.regular std20/concepts/regular.test.cpp )
add_cpp_test( std20.concepts.relation std20/concepts/relation.test.cpp )
add_cpp_test( std20.concepts.same_as std20/concepts/same_as.test.cpp )
add_cpp_test( std20.concepts.semiregular std20/concepts/semiregular.test.cpp )
add_cpp_test( std20.concepts.signed_integral std20/concepts/signed_integral.test.cpp )
add_cpp_test( std20.concepts.strict_weak_order std20/concepts/strict_weak_order.test.cpp )
add_cpp_test( std20.concepts.swappable std20/concepts/swappable.test.cpp )
add_cpp_test( std20.concepts.totally_ordered std20/concepts/totally_ordered.test.cpp )
add_cpp_test( std20.concepts.unsigned_integral std20/concepts/unsigned_integral.test.cpp )
add_cpp_test( std20.functional.equal_to std20/functional/equal_to.test.cpp )
add_cpp_test( std20.functional.greater std20/functional/greater.test.cpp )
add_cpp_test( std20.functional.greater_equal std20/functional/greater_equal.test.cpp )
add_cpp_test( std20.functional.identity std20/functional/identity.test.cpp )
add_cpp_test( std20.functional.invoke std20/functional/invoke.test.cpp )
add_cpp_test( std20.functional.less std20/functional/less.test.cpp )
add_cpp_test( std20.functional.less_equal std20/functional/less_equal.test.cpp )
add_cpp_test( std20.functional.not_equal_to std20/functional/not_equal_to.test.cpp )
add_cpp_test( std20.iterator.concepts.bidirectional_iterator std20/iterator/concepts/bidirectional_iterator.test.cpp )
add_cpp_test( std20.iterator.concepts.contiguous_iterator std20/iterator/concepts/contiguous_iterator.test.cpp )
add_cpp_test( std20.iterator.concepts.forward_iterator std20/iterator/concepts/forward_iterator.test.cpp )
add_cpp_test( std20.iterator.concepts.incrementable std20/iterator/concepts/incrementable.test.cpp )
add_cpp_test( std20.iterator.concepts.input_iterator std20/iterator/concepts/input_iterator.test.cpp )
add_cpp_test( std20.iterator.concepts.input_or_output_iterator std20/iterator/concepts/input_or_output_iterator.test.cpp )
add_cpp_test( std20.iterator.concepts.output_iterator std20/iterator/concepts/output_iterator.test.cpp )
add_cpp_test( std20.iterator.concepts.random_access_iterator std20/iterator/concepts/random_access_iterator.test.cpp )
add_cpp_test( std20.iterator.concepts.readable std20/iterator/concepts/readable.test.cpp )
add_cpp_test( std20.iterator.concepts.sentinel_for std20/iterator/concepts/sentinel_for.test.cpp )
add_cpp_test( std20.iterator.concepts.sized_sentinel_for std20/iterator/concepts/sized_sentinel_for.test.cpp )
add_cpp_test( std20.iterator.concepts.writable std20/iterator/concepts/writable.test.cpp )
add_cpp_test( std20.iterator.operations.advance std20/iterator/operations/advance.test.cpp )
add_cpp_test( std20.iterator.operations.distance std20/iterator/operations/distance.test.cpp )
add_cpp_test( std20.iterator.operations.next std20/iterator/operations/next.test.cpp )
add_cpp_test( std20.iterator.operations.prev std20/iterator/operations/prev.test.cpp )
add_cpp_test( std20.iterator.common_iterator std20/iterator/common_iterator.test.cpp )
add_cpp_test( std20.iterator.readable_traits std20/iterator/readable_traits.test.cpp )
add_cpp_test( std20.iterator.reverse_iterator std20/iterator/reverse_iterator.test.cpp )
add_cpp_test( std20.ranges.access.begin std20/ranges/access/begin.test.cpp )
add_cpp_test( std20.ranges.access.cbegin std20/ranges/access/cbegin.test.cpp )
add_cpp_test( std20.ranges.access.cdata std20/ranges/access/cdata.test.cpp )
add_cpp_test( std20.ranges.access.cend std20/ranges/access/cend.test.cpp )
add_cpp_test( std20.ranges.access.crbegin std20/ranges/access/crbegin.test.cpp )
add_cpp_test( std20.ranges.access.crend std20/ranges/access/crend.test.cpp )
add_cpp_test( std20.ranges.access.data std20/ranges/access/data.test.cpp )
add_cpp_test( std20.ranges.access.distance std20/ranges/access/distance.test.cpp )
add_cpp_test( std20.ranges.access.empty std20/ranges/access/empty.test.cpp )
add_cpp_test( std20.ranges.access.end std20/ranges/access/end.test.cpp )
add_cpp_test( std20.ranges.access.rbegin std20/ranges/access/rbegin.test.cpp )
add_cpp_test( std20.ranges.access.rend std20/ranges/access/rend.test.cpp )
add_cpp_test( std20.ranges.access.size std20/ranges/access/size.test.cpp )
add_cpp_test( std20.ranges.access.ssize std20/ranges/access/ssize.test.cpp )
add_cpp_test( std20.ranges.concepts.bidirectional_range std20/ranges/concepts/bidirectional_range.test.cpp )
add_cpp_test( std20.ranges.concepts.borrowed_range std20/ranges/concepts/borrowed_range.test.cpp )
add_cpp_test( std20.ranges.concepts.common_range std20/ranges/concepts/common_range.test.cpp )
add_cpp_test( std20.ranges.concepts.contiguous_range std20/ranges/concepts/contiguous_range.test.cpp )
add_cpp_test( std20.ranges.concepts.forward_range std20/ranges/concepts/forward_range.test.cpp )
add_cpp_test( std20.ranges.concepts.input_range std20/ranges/concepts/input_range.test.cpp )
add_cpp_test( std20.ranges.concepts.output_range std20/ranges/concepts/output_range.test.cpp )
add_cpp_test( std20.ranges.concepts.random_access_range std20/ranges/concepts/random_access_range.test.cpp )
add_cpp_test( std20.ranges.concepts.range std20/ranges/concepts/range.test.cpp )
add_cpp_test( std20.ranges.concepts.sized_range std20/ranges/concepts/sized_range.test.cpp )
add_cpp_test( std20.ranges.concepts.view std20/ranges/concepts/view.test.cpp )
add_cpp_test( std20.ranges.concepts.viewable_range std20/ranges/concepts/viewable_range.test.cpp )
add_cpp_test( std20.type_traits.common_reference std20/type_traits/common_reference.test.cpp )
#add_cpp_test( std20.type_traits.remove_cvref std20/type_traits/remove_cvref.test.cpp )
add_cpp_test( std20.type_traits.type_identity std20/type_traits/type_identity.test.cpp )
add_cpp_test( std20.views.all std20/views/all.test.cpp )
add_cpp_test( std20.views.counted std20/views/counted.test.cpp )
add_cpp_test( std20.views.drop std20/views/drop.test.cpp )
add_cpp_test( std20.views.drop_while std20/views/drop_while.test.cpp )
add_cpp_test( std20.views.elements std20/views/elements.test.cpp )
add_cpp_test( std20.views.empty std20/views/empty.test.cpp )
add_cpp_test( std20.views.filter std20/views/filter.test.cpp )
add_cpp_test( std20.views.iota std20/views/iota.test.cpp )
add_cpp_test( std20.views.join std20/views/join.test.cpp )
add_cpp_test( std20.views.ref std20/views/ref.test.cpp )
add_cpp_test( std20.views.reverse std20/views/reverse.test.cpp )
add_cpp_test( std20.views.single std20/views/single.test.cpp )
add_cpp_test( std20.views.split std20/views/split.test.cpp )
add_cpp_test( std20.views.subrange std20/views/subrange.test.cpp )
add_cpp_test( std20.views.take std20/views/take.test.cpp )
add_cpp_test( std20.views.take_while std20/views/take_while.test.cpp )
add_cpp_test( std20.views.transform std20/views/transform.test.cpp )
add_cpp_test( std23.detail.views.nonpropagating_box std23/detail/views/nonpropagating_box.test.cpp )
add_cpp_test( std23.usecase std23/usecase.test.cpp )
#add_cpp_test( std23.views.removed.zip std23/views/removed/zip.test.cpp )
#add_cpp_test( std23.views.removed.zip_transform std23/views/removed/zip_transform.test.cpp )
add_cpp_test( std23.views.chunk std23/views/chunk.test.cpp )
add_cpp_test( std23.views.chunk_by std23/views/chunk_by.test.cpp )
add_cpp_test( std23.views.repeat std23/views/repeat.test.cpp )
add_cpp_test( std23.views.stride std23/views/stride.test.cpp )
add_cpp_test( overload overload.test.cpp )
add_cpp_test( views.AnyIterator views/AnyIterator.test.cpp )
add_cpp_test( views.AnyView views/AnyView.test.cpp )
